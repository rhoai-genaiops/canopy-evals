apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: {{ .Values.tekton.pipeline.name }}
  labels:
    {{- include "canopy-tekton-pipeline.labels" . | nindent 4 }}
  annotations:
    {{- include "canopy-tekton-pipeline.annotations" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
  params:
    - name: GIT_URL
      type: string
      default: {{ .Values.git.url | quote }}
    - name: GIT_REVISION
      type: string
      default: {{ .Values.git.revision | quote }}
    - name: GIT_SHORT_REVISION
      type: string
      default: ""
    - name: BASE_URL
      type: string
      default: {{ .Values.kfp.baseUrl | quote }}
    - name: BACKEND_URL
      type: string
      default: {{ .Values.kfp.backendUrl | quote }}
  tasks:
    # Clone the canopy-prompts repository
    - name: git-clone
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: URL
          value: "$(params.GIT_URL)"
        - name: REVISION
          value: "$(params.GIT_REVISION)"
        - name: DELETE_EXISTING
          value: "true"
        - name: SSL_VERIFY
          value: "true"

    # Execute the Kubeflow Pipeline
    - name: execute-kfp-pipeline
      taskRef:
        name: {{ .Values.tekton.task.name }}
        kind: Task
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: BASE_URL
          value: "$(params.BASE_URL)"
        - name: BACKEND_URL
          value: "$(params.BACKEND_URL)"
        - name: GIT_SHORT_REVISION
          value: "$(params.GIT_SHORT_REVISION)"
      runAfter:
        - git-clone